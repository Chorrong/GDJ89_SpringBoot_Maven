spring.application.name=demo

##### server port
server.port=81

##### Encoding Filter
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true


##### jsp 설정
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

##### Mybatis 연결 설정
## DB에서 주로 Snake Case를 많이 사용
## Java에서는 Camel Case를 사용
mybatis.configuration.map-underscore-to-camel-case=true

## DB 연결 정보
# username
spring.datasource.hikari.username=user01
# password
spring.datasource.hikari.password=user01
# url
spring.datasource.url=jdbc:mariadb://192.168.0.216:3306/user01
# driver
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

## Mapper 위치
mybatis.mapper-locations=classpath:database/mappers/*Mapper.xml
## Config 위치
#mybatis.config-location=classpath:database/config/config.xml


# basepackage명 까지 입력 하위 패키지 적용
# 단, 같은 클래스명이 있는 경우 에러 발생
mybatis.type-aliases-package=com.winter.app


##### File 관련
## Multipart 사용 여부
spring.servlet.multipart.enabled=true
## 파일 하나당 최대 크기 단위
spring.servlet.multipart.max-file-size=10MB
## 총 파일 크기
spring.servlet.multipart.max-request-size=300MB


##### Transaction 
## Service클래스가 상속없이 단독 사용할 때 에러 발생
spring.aop.proxy-target-class=true

##### File Upload 관련
app.files.base=D:\\upload\\

## URL
app.files.url=/files/**


##### Message
## message properties의 위치와 파일명
spring.messages.basename=messages/message

## Encoding
spring.messages.encoding=UTF-8

## 키가 없는 경우
# true  :  예외를 발생하지 않고 key를 출력
# false :  예외를 발생 
spring.messages.use-code-as-default-message=true


##### Custom
## 개발자가 생성도 가능
menu.board.notice.name=notice
menu.board.qna.name=qna
menu.user.name=user

##### Social Login


### Registration
# Rest API KEY 등록
spring.security.oauth2.client.registration.kakao.client-id=18ba35566fcc3014ad5fc5488b4f152d

# Admin key
spring.security.oauth2.client.registration.kakao.client-secret=adminkey

# Redirect url
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:81/login/oauth2/code/kakao

# 고정값
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code

# 회원가입시(서비스연결) 추가 정보
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image

# Social login 업체 정보
spring.security.oauth2.client.registration.kakao.client-name=kakao

# 인증 요청 메서드 Spring 3.0 이후 POST 대신 다음을 작성
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post


### Provider
# 로그인 화면 (인가 코드)
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize?prompt=login

# Token
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token

# 사용자 정보
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me

spring.security.oauth2.client.provider.kakao.user-name-attribute=id








